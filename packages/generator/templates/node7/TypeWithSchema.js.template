// @flow

import {
  GraphQLObjectType,
  <%_ for (i in schema.dependencies) { -%>
  <%= schema.dependencies[i] %>,
  <%_ } -%>
} from 'graphql';
import { globalIdField } from 'graphql-relay';

import { NodeInterface } from '<%= directories.interface %>/NodeInterface';
<%_ for (i in schema.typeDependencies) { -%>
import <%= schema.typeDependencies[i] %> from '<%= directories.type %>/<%=schema.typeDependencies[i]%>';
<%_ } -%>
<%_ for (i in schema.loaderDependencies) { -%>
import <%= schema.loaderDependencies[i] %> from '<%= directories.loader %>/<%=schema.loaderDependencies[i]%>';
<%_ } -%>

export default new GraphQLObjectType({
  name: '<%= name %>',
  description: 'Represents <%= name %>',
  fields: () => ({
    id: globalIdField('<%= name %>'),
    <%_ for (field of schema.fields) { -%>
    <%- field.name %>: {
      type: <%= field.type %>,
      description: '<%= field.description %>',
      resolve: <%if(field.resolveArgs){%><%=field.resolveArgs%><%}else{ %>obj<%} %> => <%= field.resolve %>,
    },
    <%_ } -%>
  }),
  interfaces: () => [NodeInterface],
});
